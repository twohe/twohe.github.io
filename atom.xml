<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Angus' Home]]></title>
  <subtitle><![CDATA[Angus' blog]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://blog.angus.me/"/>
  <updated>2015-07-07T08:56:46.000Z</updated>
  <id>http://blog.angus.me/</id>
  
  <author>
    <name><![CDATA[Angus Dai]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[PoweredByHexo]]></title>
    <link href="http://blog.angus.me/2015/07/07/PoweredByHexo/"/>
    <id>http://blog.angus.me/2015/07/07/PoweredByHexo/</id>
    <published>2015-07-07T07:57:11.000Z</published>
    <updated>2015-07-07T08:56:46.000Z</updated>
    <content type="html"><![CDATA[<p><img src="/media/img-logo/hexo-icon.png" class="img-logo"></p>
<h2 id="Hexo安装">Hexo安装</h2><h3 id="Hexo"><a href="https://hexo.io" target="_blank" rel="external">Hexo</a></h3><h3 id="install_github(Required:command_tool)"><a href="https://mac.github.com/" target="_blank" rel="external">install github(Required:command tool)</a></h3><h3 id="get_nvm"><a href="https://github.com/creationix/nvm" target="_blank" rel="external">get nvm</a></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.<span class="number">25.4</span>/install.sh | bash</span><br></pre></td></tr></table></figure>
<p>To activate nvm, you need to source it from your shell:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">. ~/.nvm/nvm.sh</span><br></pre></td></tr></table></figure></p>
<p>get node.js<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ nvm install <span class="number">0.10</span></span><br></pre></td></tr></table></figure></p>
<h3 id="get_npm"><a href="https://github.com/npm/npm" target="_blank" rel="external">get npm</a></h3><p><a href="http://stackoverflow.com/questions/22152162/npm-cannot-install-dependencies-attempt-to-unlock-something-which-hasnt-been" target="_blank" rel="external">if Error/Warning</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo chown -R <span class="variable">$USER</span> ~/.npm</span><br><span class="line">$ sudo chown -R <span class="variable">$USER</span> /usr/<span class="built_in">local</span>/lib/node_modules</span><br><span class="line">$ sudo chown -R <span class="variable">$USER</span> /usr/<span class="built_in">local</span></span><br></pre></td></tr></table></figure></p>
<p>修正npm源为<a href="http://npm.taobao.org/" target="_blank" rel="external">taobao</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cnpm install [name] //安装模块</span><br><span class="line">$ cnpm sync connect //同步模块</span><br></pre></td></tr></table></figure>
<h3 id="finally">finally</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br><span class="line">// or</span><br><span class="line">$ cnpm install -g hexo-cli</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init &lt;folder&gt; //对文件夹初始化，生成hexo一堆文件</span><br><span class="line">// or 进入文件夹</span><br><span class="line">$ hexo init</span><br></pre></td></tr></table></figure>
<h3 id="hexo常用命令">hexo常用命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo generate	//生成页面 如做修改 应重新生成</span><br><span class="line">hexo server		//调试页面 http://localhost:<span class="number">4000</span></span><br><span class="line">hexo new [layout] <span class="string">"文章名/地址名"</span> <span class="comment">#新写一篇博客</span></span><br><span class="line">//[layout]参数即页面布局样式 默认为post 具体布局都在scaffolds文件夹中 可自定义</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p>未完待续…</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="/media/img-logo/hexo-icon.png" class="img-logo" /></p>
<h2 id="Hexo安装">Hexo安装</h2><h3 id="Hexo"><a href="https://hexo.io">Hexo</a></h3><h3 id="install_github(Required:command_tool)"><a href="https://mac.github.com/">install github(Required:command tool)</a></h3><h3 id="get_nvm"><a href="https://github.com/creationix/nvm">get nvm</a></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.<span class="number">25.4</span>/install.sh | bash</span><br></pre></td></tr></table></figure>
<p>To activate nvm, you need to source it from your shell:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">. ~/.nvm/nvm.sh</span><br></pre></td></tr></table></figure></p>
<p>get node.js<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ nvm install <span class="number">0.10</span></span><br></pre></td></tr></table></figure></p>
<h3 id="get_npm"><a href="https://github.com/npm/npm">get npm</a></h3><p><a href="http://stackoverflow.com/questions/22152162/npm-cannot-install-dependencies-attempt-to-unlock-something-which-hasnt-been">if Error/Warning</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo chown -R <span class="variable">$USER</span> ~/.npm</span><br><span class="line">$ sudo chown -R <span class="variable">$USER</span> /usr/<span class="built_in">local</span>/lib/node_modules</span><br><span class="line">$ sudo chown -R <span class="variable">$USER</span> /usr/<span class="built_in">local</span></span><br></pre></td></tr></table></figure></p>
<p>修正npm源为<a href="http://npm.taobao.org/">taobao</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cnpm install [name] //安装模块</span><br><span class="line">$ cnpm sync connect //同步模块</span><br></pre></td></tr></table></figure>
<h3 id="finally">finally</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br><span class="line">// or</span><br><span class="line">$ cnpm install -g hexo-cli</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init &lt;folder&gt; //对文件夹初始化，生成hexo一堆文件</span><br><span class="line">// or 进入文件夹</span><br><span class="line">$ hexo init</span><br></pre></td></tr></table></figure>
<h3 id="hexo常用命令">hexo常用命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo generate	//生成页面 如做修改 应重新生成</span><br><span class="line">hexo server		//调试页面 http://localhost:<span class="number">4000</span></span><br><span class="line">hexo new [layout] <span class="string">"文章名/地址名"</span> <span class="comment">#新写一篇博客</span></span><br><span class="line">//[layout]参数即页面布局样式 默认为post 具体布局都在scaffolds文件夹中 可自定义</span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
      <category term="Hexo" scheme="http://blog.angus.me/tags/Hexo/"/>
    
      <category term="Node" scheme="http://blog.angus.me/tags/Node/"/>
    
      <category term="WebSite" scheme="http://blog.angus.me/tags/WebSite/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Spring Goes]]></title>
    <link href="http://blog.angus.me/2014/04/24/spring-goes/"/>
    <id>http://blog.angus.me/2014/04/24/spring-goes/</id>
    <published>2014-04-24T02:33:44.000Z</published>
    <updated>2015-07-07T03:26:47.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>Though time running away,I only care about you</p>
</blockquote>
<a id="more"></a>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>Though time running away,I only care about you</p>
</blockquote>]]>
    
    </summary>
    
      <category term="life" scheme="http://blog.angus.me/tags/life/"/>
    
      <category term="photo" scheme="http://blog.angus.me/tags/photo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[xcode5时代如何设置Architectures和Valid Architectures]]></title>
    <link href="http://blog.angus.me/2014/04/24/xcode5%E6%97%B6%E4%BB%A3%E5%A6%82%E4%BD%95%E8%AE%BE%E7%BD%AEarchitectures%E5%92%8Cvalid-architectures/"/>
    <id>http://blog.angus.me/2014/04/24/xcode5时代如何设置architectures和valid-architectures/</id>
    <published>2014-04-24T01:19:09.000Z</published>
    <updated>2014-04-23T12:00:02.000Z</updated>
    <content type="html"><![CDATA[<h3 id="官方">官方</h3><blockquote>
<p><a href="https://developer.apple.com/library/ios/documentation/General/Conceptual/CocoaTouch64BitGuide/Introduction/Introduction.html" target="_blank" rel="external">参考1</a><br><a href="https://developer.apple.com/library/ios/documentation/General/Conceptual/CocoaTouch64BitGuide/OptimizingMemoryPerformance/OptimizingMemoryPerformance.html#//apple_ref/doc/uid/TP40013501-CH4-SW1" target="_blank" rel="external">参考2</a></p>
</blockquote>
<h2 id="目前ios的指令集有以下几种">目前ios的指令集有以下几种</h2><blockquote>
<ol>
<li>armv6,支持的机器iPhone,iPhone2,iPhone3G及对应的iTouch</li>
<li>armv7,支持的机器iPhone4,iPhone4S</li>
<li>armv7s,支持的机器iPhone5,iPhone5C</li>
<li>arm64，支持的机器：iPhone5S</li>
</ol>
</blockquote>
<p>机器对指令集的支持是向下兼容的，因此armv7的指令集是可以运行在iphone5S的，只是效率没那么高而已~</p>
<a id="more"></a>
<hr>
<blockquote>
<p><code>Architecture</code> ： 指你想支持的指令集。<br><code>Valid architectures</code> : 指即将编译的指令集。<br><code>Build Active Architecture Only</code> : 只是否只编译当前适用的指令集。</p>
</blockquote>
<hr>
<p>现在是2014年初，其实4和4S的用户还是蛮多的，而iphone3之类的机器几乎没有了，所以我们的指令集最低必须基于armv7.<br>因此,Architecture的值选择：armv7 armv7s arm64(选arm64时需要最低支持5.1.1，这块不太明白）</p>
<blockquote>
<ol>
<li>如果想自己的app在各个机器都能够最高效率的运行，则需要将Build Active Architecture Only改为NO,Valid architectures选择对应的指令集：armv7 armv7s arm64。这个会为各个指令集编译对应的代码，因此最后的 ipa体积基本翻了3倍。（如果不在乎app大小的话，应该这样做）</li>
<li>如果想让app体积保持最小，则现阶段应该选择Valid architectures为armv7,这样Build Active Architecture Only选YES或NO就无所谓了。`</li>
</ol>
</blockquote>
<p><a href="http://www.cnblogs.com/Gukw/p/3530340.html" target="_blank" rel="external">本文源链接1</a><br><a href="http://justsee.iteye.com/blog/2009954" target="_blank" rel="external">本文源链接2</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="官方">官方</h3><blockquote>
<p><a href="https://developer.apple.com/library/ios/documentation/General/Conceptual/CocoaTouch64BitGuide/Introduction/Introduction.html">参考1</a><br><a href="https://developer.apple.com/library/ios/documentation/General/Conceptual/CocoaTouch64BitGuide/OptimizingMemoryPerformance/OptimizingMemoryPerformance.html#//apple_ref/doc/uid/TP40013501-CH4-SW1">参考2</a></p>
</blockquote>
<h2 id="目前ios的指令集有以下几种">目前ios的指令集有以下几种</h2><blockquote>
<ol>
<li>armv6,支持的机器iPhone,iPhone2,iPhone3G及对应的iTouch</li>
<li>armv7,支持的机器iPhone4,iPhone4S</li>
<li>armv7s,支持的机器iPhone5,iPhone5C</li>
<li>arm64，支持的机器：iPhone5S</li>
</ol>
</blockquote>
<p>机器对指令集的支持是向下兼容的，因此armv7的指令集是可以运行在iphone5S的，只是效率没那么高而已~</p>]]>
    
    </summary>
    
      <category term="copy" scheme="http://blog.angus.me/tags/copy/"/>
    
      <category term="ios" scheme="http://blog.angus.me/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[import--iOS7新关键字]]></title>
    <link href="http://blog.angus.me/2014/04/18/import--ios7%E6%96%B0%E5%85%B3%E9%94%AE%E5%AD%97/"/>
    <id>http://blog.angus.me/2014/04/18/import--ios7新关键字/</id>
    <published>2014-04-17T16:00:00.000Z</published>
    <updated>2015-07-07T02:23:45.000Z</updated>
    <content type="html"><![CDATA[<ol>
<li>好处<br>One of the big advantages of using @import is that you don’t need to add the framework in the project settings, it’s done automatically. That means that you can skip the step where you click the plus button and search for the framework (golden toolbox), then move it to the “Frameworks” group. It will save many developers from the cryptic “Linker error” messages.<br>使用@import的最大好处之一是当需要使用某个苹果自己的框架时，再也不需要在项目的setting中做 “点击’+’号按钮搜索依赖框架添加” 这样的操作了，@import内部会自动实现这个过程。这样我们就可以使用代码完成以前需要在图形界面完成的动作。苹果又为开发者做出了改进。<br>以前写程序导入系统头文件的时候都这么写#import <cocoa cocoa.h="">, 现在你多了一种选择， 你可以这么写:@import Cocoa; 并且免去了添加框架的操作。<a id="more"></a></cocoa></li>
<li><p>局限性<br>Modules only work with Apple frameworks (UIKit, MapKit, GameKit, etc). You can’t use them with frameworks you create yourself. Currently you can’t use them with 3rd-party frameworks (AFNetworking, RestKit, MagicalRecord). I don’t think it works with non-Apple frameworks even if they’re included in Xcode (dylibs like libsqlite3.dylib).<br>但是目前使用@import仅适用于苹果自己的框架，当在项目中想使用@import导入自己搭建的框架或者第三方框架时，是无效的。</p>
</li>
<li><p>实际开发中<br>You don’t actually need to use the @import keyword. If you opt-in to using modules, all #import and #include directives are mapped to use @import automatically. That means that you don’t have to change your source code (or the source code of libraries that you download from elsewhere). Supposedly using modules improves the build performance too, especially if you haven’t been using PCHs well or if your project has many small source files.<br>实际开发中上可能并不需要使用@import关键字。如果你选择使用”modules”(Xcode5中默认开启)，所有的#import和#include 指令都会自动映射使用@import。这意味着你并不需要改变你之前的源码。下面意译， 尤其对于没有善用.pch头文件的开发者或者你的项目中有许多零碎小的源文件时， 使用@import导入指定框架下需要的头文件时，Xcode的编译表现会有提高。</p>
</li>
</ol>
<p><a href="http://www.cnblogs.com/orzmj123/p/3502041.html" target="_blank" rel="external">本文源链接</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<ol>
<li>好处<br>One of the big advantages of using @import is that you don’t need to add the framework in the project settings, it’s done automatically. That means that you can skip the step where you click the plus button and search for the framework (golden toolbox), then move it to the “Frameworks” group. It will save many developers from the cryptic “Linker error” messages.<br>使用@import的最大好处之一是当需要使用某个苹果自己的框架时，再也不需要在项目的setting中做 “点击’+’号按钮搜索依赖框架添加” 这样的操作了，@import内部会自动实现这个过程。这样我们就可以使用代码完成以前需要在图形界面完成的动作。苹果又为开发者做出了改进。<br>以前写程序导入系统头文件的时候都这么写#import <Cocoa/Cocoa.h>, 现在你多了一种选择， 你可以这么写:@import Cocoa; 并且免去了添加框架的操作。]]>
    
    </summary>
    
      <category term="copy" scheme="http://blog.angus.me/tags/copy/"/>
    
      <category term="ios" scheme="http://blog.angus.me/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[將頁面升級到HTML5]]></title>
    <link href="http://blog.angus.me/2013/12/17/2013-12-17-update+to+HTML5/"/>
    <id>http://blog.angus.me/2013/12/17/2013-12-17-update+to+HTML5/</id>
    <published>2013-12-16T16:00:00.000Z</published>
    <updated>2014-04-01T17:19:28.000Z</updated>
    <content type="html"><![CDATA[<h3 id="STEP_1">STEP 1</h3><p><em>HTML4.01</em>    </p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#60;!DOCTYPE html PUBLIC &#34;-//W3C//DTD HTML 4.01//EN&#34; &#34;http://www.w3.org/TR/html4/strict.dtd&#34;&#62;</span><br></pre></td></tr></table></figure>
<p><em>HTML5</em><br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#60;!doctype html&#62;</span><br></pre></td></tr></table></figure></p>
<a id="more"></a>
<p><em>Not only is this the doctype for HTML5, it’s the doctype for every future version of HTML. In other words, it’s never going to change again. Not only that, it will work in your older browsers too.</em></p>
<hr>
<h3 id="STEP_2">STEP 2</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#60;meta http-equiv=&#34;content-type&#34; content=&#34;text/html; charset=UTF-8&#34;&#62; &#60;meta charset=&#34;utf-8&#34;&#62;</span><br></pre></td></tr></table></figure>
<p>change to<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#60;meta charset=&#34;utf-8&#34;&#62;</span><br></pre></td></tr></table></figure></p>
<p><em>When you specify the meta tag in HTML5, just supply the tag along with a character encoding. Believe it or not, all browsers (old and new) already understand this meta description, so you can use it on any page and it just works.</em></p>
<hr>
<h3 id="STEP_3">STEP 3</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#60;link type=&#34;text/css&#34; rel=&#34;stylesheet&#34; href=&#34;lounge.css&#34;&#62;</span><br></pre></td></tr></table></figure>
<p><em>To upgrade this for HTML5, we just need to remove the type attribute.Why? Because CSS has been declared the standard, and default, style for HTML5. So, after we remove the type attribute, the new link looks like this:</em><br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#60;link rel=&#34;stylesheet&#34; href=&#34;lounge.css&#34;&#62;</span><br></pre></td></tr></table></figure></p>
<hr>
<h3 id="BOUNS">BOUNS</h3><p><em>With HTML5, JavaScript is now the standard and default scripting language, so you can remove the type attribute from your script tags too. Here’s what the new script tag looks like without the type attribute:</em><br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#60;script src=&#34;lounge.js&#34;&#62;&#60;/script&#62;</span><br></pre></td></tr></table></figure></p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#60;script&#62;&#10;var youRock = true;&#10;&#60;/script&#62;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[將頁面升級到HTML5]]>
    
    </summary>
    
      <category term="HTML5" scheme="http://blog.angus.me/tags/HTML5/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Sublime Text插件]]></title>
    <link href="http://blog.angus.me/2013/12/17/2013-12-17-about+Sublime+Text/"/>
    <id>http://blog.angus.me/2013/12/17/2013-12-17-about+Sublime+Text/</id>
    <published>2013-12-16T16:00:00.000Z</published>
    <updated>2015-07-07T07:47:06.000Z</updated>
    <content type="html"><![CDATA[<p><img src="/media/files/2013/12/16/DocBlockr.png" class="img-logo"></p>
<p>1.Package Control<br><a href="https://sublime.wbond.net/installation" target="_blank" rel="external">link</a><br>在此站點可以搜尋到所有可以通過Package Control安裝的ST插件<br><code>control+` </code>調出Console,copy以下回車即可安裝<br><a id="more"></a>    </p>
<blockquote>
<p>import urllib.request,os; pf = ‘Package Control.sublime-package’; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), ‘wb’).write(urllib.request.urlopen( ‘<a href="http://sublime.wbond.net/" target="_blank" rel="external">http://sublime.wbond.net/</a>‘ + pf.replace(‘ ‘,’%20’)).read())    </p>
</blockquote>
<hr>
<p>2.DocBlockr<br>符合導出註釋文檔的插件<br>輸入/**回車即可根據下方內容生成相應地註釋<br><img src="/media/files/2013/12/16/DocBlockr.png" alt="Sublime text插件" title="DocBlockr"></p>
<hr>
<p>3.Alignment<br>格式化代碼<br>選中需要格式的代碼<br><code>control+command+a</code><br><img src="/media/files/2013/12/16/Alignment.png" alt="Sublime text插件" title="Alignment"></p>
<hr>
<p>4.Pretty Json<br><code>control+command+j</code><br><img src="/media/files/2013/12/16/PrettyJson.png" alt="Sublime text插件" title="PrettyJson">       </p>
<hr>
<p>5.JsFormat<br>格式化js代碼<br><code>control+option+f</code></p>
<hr>
<p>6.HTML5<br>增加html5標籤</p>
<hr>
<p>7.SideBarEnhancements<br>ST的側邊欄右鍵拓展</p>
<hr>
<p>8.Emmet<br>Zen Coding         </p>
]]></content>
    <summary type="html">
    <![CDATA[Sublime text編輯器,Sublime text插件]]>
    
    </summary>
    
      <category term="Alignment" scheme="http://blog.angus.me/tags/Alignment/"/>
    
      <category term="DocBlockr" scheme="http://blog.angus.me/tags/DocBlockr/"/>
    
      <category term="Emmet" scheme="http://blog.angus.me/tags/Emmet/"/>
    
      <category term="HTML5" scheme="http://blog.angus.me/tags/HTML5/"/>
    
      <category term="JsFormat" scheme="http://blog.angus.me/tags/JsFormat/"/>
    
      <category term="Pretty Json" scheme="http://blog.angus.me/tags/Pretty-Json/"/>
    
      <category term="ST" scheme="http://blog.angus.me/tags/ST/"/>
    
      <category term="SideBarEnhancements" scheme="http://blog.angus.me/tags/SideBarEnhancements/"/>
    
      <category term="edit" scheme="http://blog.angus.me/tags/edit/"/>
    
      <category term="tool" scheme="http://blog.angus.me/tags/tool/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[检测API是否提供的方法]]></title>
    <link href="http://blog.angus.me/2013/11/28/2013-11-28-%E6%A3%80%E6%B5%8BAPI%E6%98%AF%E5%90%A6%E6%8F%90%E4%BE%9B%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <id>http://blog.angus.me/2013/11/28/2013-11-28-检测API是否提供的方法/</id>
    <published>2013-11-27T16:00:00.000Z</published>
    <updated>2014-04-01T16:39:58.000Z</updated>
    <content type="html"><![CDATA[<p>from Apple <a href="https://developer.apple.com/library/ios/documentation/DeveloperTools/Conceptual/cross_development/cross_development.pdf" target="_blank" rel="external">SDK Compatibility Guide</a> page 15</p>
<hr>
<p>Listing 3-2 Checking the availability of a C function</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if (CGColorCreateGenericCMYK != NULL) &#123;&#10;&#9;CGColorCreateGenericCMYK (0.1,0.5.0.0,1.0,0.1);&#10;&#125; else &#123;&#10;&#9;// Function is not available.&#10;&#9;// Alternate code to create a color object with earlier technology&#10;&#125;</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<hr>
<p>Note: To check the availability of a function, explicitly compare its address to NULL or nil. You<br>cannot use the negation operator ( ! ) to negate the address of a function to check its availability.<br>Also, note that the name of a C function is synonymous with its address. That is, &amp;myFunction is equivalent to myFunction.</p>
<hr>
<p>Check the availability of an external (extern) constant or a notification name by explicitly comparing its<br>address—and not the symbol’s bare name—to NULL or nil</p>
]]></content>
    <summary type="html">
    <![CDATA[一种检测API是否提供的方法]]>
    
    </summary>
    
      <category term="API" scheme="http://blog.angus.me/tags/API/"/>
    
      <category term="ios" scheme="http://blog.angus.me/tags/ios/"/>
    
      <category term="oc" scheme="http://blog.angus.me/tags/oc/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[mac下导出.ico]]></title>
    <link href="http://blog.angus.me/2013/11/27/2013-11-27-mac%E4%B8%8B%E5%AF%BC%E5%87%BA.ico/"/>
    <id>http://blog.angus.me/2013/11/27/2013-11-27-mac下导出.ico/</id>
    <published>2013-11-26T16:00:00.000Z</published>
    <updated>2014-04-23T11:16:22.000Z</updated>
    <content type="html"><![CDATA[<p><strong>对于偶尔需要一个icon的人来说</strong></p>
<p>推荐的方式   </p>
<ol>
<li>基于flash的站点<a href="http://www.converticon.com" target="_blank" rel="external">convertion.com</a>在线导出为.ico<br>可以将ICO, PNG, GIF, and JPEG 导出为 PNG 或 ICO 并具备多个像素大小选择.<br>2.<blockquote>
<p>brew install png2ico<br>png2ico favicon.ico twohe.png #生成favicon.ico   </p>
</blockquote>
</li>
</ol>
<a id="more"></a>
]]></content>
    <summary type="html">
    <![CDATA[在mac下制作icon图标]]>
    
    </summary>
    
      <category term="icon" scheme="http://blog.angus.me/tags/icon/"/>
    
      <category term="picture" scheme="http://blog.angus.me/tags/picture/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[开天辟地第一篇]]></title>
    <link href="http://blog.angus.me/2013/11/26/2013-11-26-%E5%BC%80%E5%A4%A9%E8%BE%9F%E5%9C%B0%E7%AC%AC%E4%B8%80%E7%AF%87/"/>
    <id>http://blog.angus.me/2013/11/26/2013-11-26-开天辟地第一篇/</id>
    <published>2013-11-25T16:00:00.000Z</published>
    <updated>2014-04-23T11:16:28.000Z</updated>
    <content type="html"><![CDATA[<p><strong>Hello, 很高兴认识你</strong></p>
<hr>
<p>几天零零碎碎<br>最初使用WordPress很快搭好了一个博客<br>立马看到了叫jekyll的东西<br>刻意去看了经常看的博客的注脚,又发现了Octopress和jekyllbootstrap<br>前前后后都尝试了,最终使用了jekyll<br>其实,都差不太多,后两者都是基于jekyll</p>
<hr>
<p>另外,发现一个国产<a href="http://www.farbox.com" target="_blank" rel="external">farbox</a>.觉得不错,推给大家</p>
<hr>
<p>刚刚,爱基与朕讲其失恋被抛弃<br>朕赐一句与他也与你:</p>
<blockquote>
<p>不问世事,与技术相依为命;看破红尘,同电脑白头偕老</p>
</blockquote>
<p>PS,他又加个了横批:屌注孤</p>
<a id="more"></a>
]]></content>
    <summary type="html">
    <![CDATA[<p><strong>Hello, 很高兴认识你</strong></p>
<hr>
<p>几天零零碎碎<br>最初使用WordPress很快搭好了一个博客<br>立马看到了叫jekyll的东西<br>刻意去看了经常看的博客的注脚,又发现了Octopress和jekyllbootstrap<br>前前后后都尝试了,最终使用了jekyll<br>其实,都差不太多,后两者都是基于jekyll</p>
<hr>
<p>另外,发现一个国产<a href="http://www.farbox.com">farbox</a>.觉得不错,推给大家</p>
<hr>
<p>刚刚,爱基与朕讲其失恋被抛弃<br>朕赐一句与他也与你:</p>
<blockquote>
<p>不问世事,与技术相依为命;看破红尘,同电脑白头偕老</p>
</blockquote>
<p>PS,他又加个了横批:屌注孤</p>]]>
    
    </summary>
    
      <category term="diary" scheme="http://blog.angus.me/tags/diary/"/>
    
      <category term="notes" scheme="http://blog.angus.me/tags/notes/"/>
    
  </entry>
  
</feed>